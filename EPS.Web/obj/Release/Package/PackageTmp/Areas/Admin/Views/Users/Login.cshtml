@using Framework.Core
@model EPS.Models.ViewModel.LoginViewModel
@{
    Layout = null;
}

<!doctype html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html;charset=utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0" />
    <title>@Html.Lang("Login")</title>
    <link rel="stylesheet" type="text/css" href="~/Content/styles/bootstrap.css">
    <link rel="stylesheet" type="text/css" href="~/Content/styles/font-awesome.css">
    <link rel="stylesheet" type="text/css" href="~/Content/styles/login.css">
    <script type="text/javascript" src="~/Content/scripts/jquery.js"></script>
    <script type="text/javascript" src="~/Content/scripts/jquery.validate.js"></script>
    <script type="text/javascript" src="~/Content/scripts/jquery.validate.unobtrusive.js"></script>
    <script type="text/javascript" src="~/Content/scripts/bootstrap.js"></script>
    <script type="text/javascript" src="~/Content/scripts/login.js"></script>
    <meta name="description" content="login" />
</head>
<body>
    <div class="wrapper">
        <section id="content">
            <div class="signin-block">

                <div class="sigin-body">
                    <div class="container">
                        <div class="form-container">
                            <header>
                                @Html.Lang("System Management")
                            </header>
                            <form action="~/Users/Login" method="post" class="form-horizontal">
                                @Html.HiddenFor(x => x.ReturnUrl)
                                <fieldset>
                                    <div class="form-group">
                                        <div class="input-group">
                                            <span class="input-group-addon">
                                                <span class="fa fa-user"></span>
                                            </span>
                                            @Html.TextBoxFor(x => x.UserName, new { @class = "form-control", placeholder = Html.Lang("User Name") })

                                        </div>
                                        @Html.ValidationMessageFor(x => x.UserName)
                                    </div>
                                    <div class="form-group" style="margin-bottom:0;">
                                        <div class="input-group">
                                            <span class="input-group-addon">
                                                <span class="fa fa-lock"></span>
                                            </span>
                                            @Html.PasswordFor(x => x.Password, new { @class = "form-control", placeholder =  Html.Lang("Password") })
                                        </div>
                                        @Html.ValidationMessageFor(x => x.Password)
                                    </div>
                                    <div class="form-group" style="float:right;">
                                        <div class="input-group">
                                            <div class="checkbox">
                                                <label>
                                                    <input type="checkbox" name="Remember" @(Model.Remember == "on" ? "checked" : "")>@Html.Lang("Remember me 7 days")
                                                </label>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <input type="hidden" name="TimezoneOffset" id="TimezoneOffset" />
                                        <button type="submit" name="btnLogin" class="btn btn-primary btn-block">@Html.Lang("Log in")</button>

                                    </div>
                                </fieldset>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>

    @if (DataCast.Get<bool>(ViewBag.HasMessage))
    {
        <div class="message-box">
            <div class="success @TempData["MessageType"]">
                @Html.ValidationSummary("", new { @class = "summary" })
            </div>
        </div>
    }
</body>
</html>